// Generated by CoffeeScript 1.6.2

var assert      = require('assert');
var PassThrough = require('stream').PassThrough;
var recreate    = require('./index');

describe('stream-recreate', function() {

  it('emits an "open" event on underlying stream "open"', function(done) {
    var stream = recreate(function() { return new PassThrough; });

    stream.on('open', done);
    stream.underlying.emit('open');
  });

  it('recreates stream on end of underlying stream', function(done) {
    var stream = recreate(function() { return new PassThrough; });
    var underlying1 = stream.underlying;

    stream.backoff.on('ready', function() {
      stream.underlying.on('open', function() {
        assert.notEqual(stream.underlying, underlying1);
        done();
      });
      stream.underlying.emit('open');
    });

    stream.underlying.end();
  });

  it('recreates stream on error of underlying stream', function(done) {
    var stream = recreate(function() { return new PassThrough; });
    var underlying1 = stream.underlying;

    stream.backoff.on('ready', function() {
      stream.underlying.on('open', function() {
        assert.notEqual(stream.underlying, underlying1);
        done();
      });
      stream.underlying.emit('open');
    });

    stream.underlying.emit('error', new Error('x'));
  });

});
